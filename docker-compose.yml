version: '3.0'

services:
  zookeeper:
    restart: always
    image: "zookeeper:3.5"
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;zookeeper:2181

  kafka:
    restart: always
    image: "wurstmeister/kafka"
    ports:
      - "9092:9092"
    env_file:
      - kafka.env
    depends_on:
      - zookeeper

  redis:
    restart: always
    image: "redis:4.0"
    ports:
      - "6379"

  tb-core:
    restart: always
    image: "thingsboard/tb-node:3.5.0"
    ports:
      - "8080:8080"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      TB_HOST: tb-core
      CLUSTER_NODE_ID: tb-core
    env_file:
      - tb-node.hybrid.env
    volumes:
      - ./tb-node/conf:/config
    depends_on:
      - kafka
      - redis
      - tb-js-executor
      - postgres
      - cassandra

  postgres:
    restart: always
    image: "postgres:12"
    ports:
      - "5432"
    environment:
      POSTGRES_DB: thingsboard
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./tb-node/postgres:/var/lib/postgresql/data

  cassandra:
    restart: always
    image: "cassandra:4.0.4"
    ports:
      - "9042"
    volumes:
      - ./tb-node/cassandra:/var/lib/cassandra

  tb-mqtt-transport:
    restart: always
    image: "thingsboard/tb-mqtt-transport:3.5.0"
    ports:
      - "1883"
    environment:
      TB_HOST: tb-mqtt-transport
      CLUSTER_NODE_ID: tb-mqtt-transport
    env_file:
      - tb-mqtt-transport.env
    volumes:
      - ./tb-transports/mqtt/conf:/config
    depends_on:
      - kafka

  tb-http-transport:
    restart: always
    image: "thingsboard/tb-http-transport:3.5.0"
    ports:
      - "8081"
    environment:
      TB_HOST: tb-http-transport
      CLUSTER_NODE_ID: tb-http-transport
    env_file:
      - tb-http-transport.env
    volumes:
      - ./tb-transports/http/conf:/config
    depends_on:
      - kafka

  tb-rule-engine:
    restart: always
    image: "thingsboard/tb-node:3.5.0"
    ports:
      - "8080"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      TB_SERVICE_ID: tb-rule-engine
      TB_SERVICE_TYPE: tb-rule-engine
      JAVA_OPTS: "-Xmx512M -Xms512M -Xss384k -XX:+AlwaysPreTouch"
    env_file:
      - tb-node.env
    volumes:
      - ./tb-node/conf:/config
    depends_on:
      - zookeeper
      - tb-js-executor

  tb-js-executor:
    restart: always
    image: "thingsboard/tb-js-executor:3.5.0"
    # deploy:
    #   replicas: 2
    env_file:
      - tb-js-executor.env
    depends_on:
      - kafka

  tb-snmp-transport:
    restart: always
    image: "thingsboard/tb-snmp-transport:3.5.0"
    environment:
      TB_SERVICE_ID: tb-snmp-transport
      JAVA_OPTS: "-Xmx512M -Xms512M -Xss384k -XX:+AlwaysPreTouch"
    env_file:
      - tb-snmp-transport.env
    volumes:
      - ./tb-transports/snmp/conf:/config
    depends_on:
      - zookeeper
      - tb-core

  tb-vc-executor:
    restart: always
    image: "thingsboard/tb-vc-executor:3.5.0"
    ports:
      - "8081"
    environment:
      TB_SERVICE_ID: tb-vc-executor
      JAVA_OPTS: "-Xmx512M -Xms512M -Xss384k -XX:+AlwaysPreTouch"
    env_file:
      - tb-vc-executor.env
    volumes:
      - ./tb-vc-executor/conf:/config
    depends_on:
      - zookeeper
      - tb-core
